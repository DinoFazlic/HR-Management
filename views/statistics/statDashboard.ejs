<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Statistics Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        .chart-container {
            max-width: 800px;
            margin: 0 auto; 
            padding: 20px;  
        }
    
        canvas {
            width: 100% !important; 
            height: auto !important; 
        }
    </style>
    
</head>
<body>

    <div class="container mt-5">
        
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Statistics Dashboard</h1>
            <a href="/admin/adminDashboard" class="btn btn-secondary">Back to Dashboard</a>
        </div>

        <!-- Chart za broj prijava po konkursu -->
        <div class="chart-container">
            <h2>Number of Applications per Job</h2>
            <canvas id="applicationsChart"></canvas>
        </div>

        <!-- Chart za prosječno trajanje procesa selekcije -->
        <div class="chart-container">
            <h2>Average Selection Time (days)</h2>
            <canvas id="selectionTimeChart"></canvas>
        </div>

        <div class="chart-container">
            <h2>Average Candidate Ratings per Job</h2>
            <canvas id="ratingsChart"></canvas>
        </div>
    </div>

    <script>
        async function fetchStatistics() {
            try {
                const response = await fetch('/statistics/stats');
                const data = await response.json();

                // Bar chart podaci
                const jobTitles = data.applications.map(item => item.job_title);
                const totalApplications = data.applications.map(item => item.total_applications);

                const applicationsChart = new Chart(document.getElementById('applicationsChart'), {
                    type: 'bar',
                    data: {
                        labels: jobTitles,
                        datasets: [{
                            label: 'Number of Applications',
                            data: totalApplications,
                            backgroundColor: 'rgba(75, 192, 192, 0.6)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: { beginAtZero: true }
                        }
                    }
                });

                // Line chart podaci
                const avgSelectionTime = data.selectionTime.map(item => item.avg_selection_time);

                const selectionTimeChart = new Chart(document.getElementById('selectionTimeChart'), {
                    type: 'line',
                    data: {
                        labels: jobTitles,
                        datasets: [{
                            label: 'Average Selection Time (days)',
                            data: avgSelectionTime,
                            backgroundColor: 'rgba(153, 102, 255, 0.6)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1,
                            fill: false
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: { beginAtZero: true }
                        }
                    }
                });

                // Ratings chart podaci
            const ratingsJobTitles = data.ratings.map(item => item.job_title);
            const avgRatings = data.ratings.map(item => item.avg_rating);

            const ratingsChart = new Chart(document.getElementById('ratingsChart'), {
                type: 'bar',
                data: {
                    labels: ratingsJobTitles,
                    datasets: [{
                        label: 'Average Rating',
                        data: avgRatings,
                        backgroundColor: 'rgba(255, 99, 132, 0.6)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: { beginAtZero: true }
                    }
                }
            });

            } catch (err) {
                console.error('Error fetching statistics:', err);
            }
        }

        fetchStatistics();
    </script>
</body>
</html>
